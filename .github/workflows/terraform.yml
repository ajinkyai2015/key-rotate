name: Terraform

on:
  push:
    branches:
      - main
      - destroy-branch
  workflow_dispatch:

jobs:
  terraform-apply:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11

      - name: Install Zip
        run: sudo apt-get install -y zip

      - name: Create Lambda Zip
        run: |
          cd modules/lambda
          zip lambda.zip ../../lambda_function.py
          cd ../..

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          sns_subscription_email = "${{ secrets.SNS_SUBSCRIPTION_EMAIL }}"
          ami = "ami-0604d81f2fd264c7b"
          instance_type = "t3.micro"
          key_name = "${{ secrets.KEY_NAME }}"
          instance_name = "${{ secrets.INSTANCE_NAME }}"
          readonly_role_name = "readonly-role"
          readonly_user_name = "readonly-user"
          test_user_name = "test-user"
          secrets_manager_secret_name = "readonly-user-secret"
          AWS_ACCESS_KEY_ID = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          EOF

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan

      - name: Terraform Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve

      - name: Output Terraform Outputs
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform output

  terraform-destroy:
    if: github.ref == 'refs/heads/destroy-branch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11

      - name: Install Zip
        run: sudo apt-get install -y zip

      - name: Create Lambda Zip
        run: |
          cd modules/lambda
          zip lambda.zip ../../lambda_function.py
          cd ../..

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          sns_subscription_email = "${{ secrets.SNS_SUBSCRIPTION_EMAIL }}"
          ami = "ami-0604d81f2fd264c7b"
          instance_type = "t3.micro"
          key_name = "${{ secrets.KEY_NAME }}"
          instance_name = "${{ secrets.INSTANCE_NAME }}"
          readonly_role_name = "readonly-role"
          readonly_user_name = "readonly-user"
          test_user_name = "test-user"
          secrets_manager_secret_name = "readonly-user-secret"
          AWS_ACCESS_KEY_ID = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          EOF

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: List Terraform State
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform state list

      - name: Terraform Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve
