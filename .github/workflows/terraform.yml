name: Terraform

on:
  push:
    branches:
      - main
      - destroy-branch
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11

      - name: Install Zip
        run: sudo apt-get install -y zip

      - name: Create Lambda Zip
        run: |
          cd modules/lambda
          zip lambda.zip ../../lambda_function.py
          cd ../..

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      # - name: Terraform Plan
      #   if: github.ref == 'refs/heads/main'
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: terraform plan -var="sns_subscription_email=${{ secrets.SNS_SUBSCRIPTION_EMAIL }}"

      - name: Terraform destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve -var="sns_subscription_email=${{ secrets.SNS_SUBSCRIPTION_EMAIL }}"

  # destroy:
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/destroy-branch'

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         terraform_version: 1.0.11

  #     - name: Install Zip
  #       run: sudo apt-get install -y zip

  #     - name: Create Lambda Zip
  #       run: |
  #         cd modules/lambda
  #         zip lambda.zip ../../lambda_function.py
  #         cd ../..

  #     - name: Terraform Init
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       run: terraform init

  #     - name: Terraform Destroy
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       run: terraform destroy -auto-approve -var="sns_subscription_email=${{ secrets.SNS_SUBSCRIPTION_EMAIL }}"
